buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'ukwserver'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    //front end
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    
    //hot swapping
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    
    compile 'org.springframework.boot:spring-boot-starter-security'
    //compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.2.RELEASE'
	//compile 'io.jsonwebtoken:jjwt-api:0.10.5'
  	//compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.1.RELEASE'
 	compile 'io.jsonwebtoken:jjwt-impl:0.10.5',
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            'org.bouncycastle:bcprov-jdk15on:1.60',
            'io.jsonwebtoken:jjwt-jackson:0.10.5'
    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    compile ("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test:4.2.1.RELEASE")
      testCompile("com.h2database:h2")
}
